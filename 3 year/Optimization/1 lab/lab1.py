import numpy as np
from sympy import *

#Создание матрицы
A = np.array([[1,2,3],
[4,5,6],[7,8,9]])

B = np.array([[0,0],
[2,2],[4,5]])

E = np.eye(3)
#Сложение
print("-"*20,"\nСложение",A+E)

#Умножение матриц
print("-"*20,"\nУмножение",np.dot(A,B))

#Поэлементное умножение
A = np.array([[1,2,3],
[4,5,6]]),
B = np.array([[0,0,0],
[2,2,2]])
print("-"*20,"\nПоэлементное умножение",A*B)

#Обратная матрица
C = np.array([[9,4],[1,2]])
print("-"*20,"\nОбратная матрица",np.linalg.inv(C))

#Ранг матрицы
print("-"*20,"\nРанг матрицы",np.linalg.matrix_rank(A))

#sympy
a = Matrix([[1,2,3], [0,-1, 1]])
print("-"*20,"\nМатрица sympy",a)
print("Максимальное число линейних независимых векторов:", a.rank())
print("\n", a.rref()[0])
print("\n", a.rref()[1])
#Создание единичной матрицы
print("-"*20,"\nЕдиничная матрица",eye(3))

#Удаление из матрицы строки, столбца
a.row_del(1)
a.col_del(1)
print("-"*20,"\nУдаление из матрицы строки, столбца",a)

x1, x2, x3 = symbols("x1 x2 x3")
y1 = x1 + x2 + 2 * x3 - 2
y2 = 2 * x1 + x2 + x3 - 3
out = linsolve([y1, y2], [x1, x2])
print("", out)
